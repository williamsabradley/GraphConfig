section: PlantInfo
datetime: 2022-02-15 19:04:12
plant_name: ProcessIQ
---
section: ProjectConfig
interval: 5
logging: CRITICALclear
samba_drive_path: .\\
debug_time: false
test_mode: false
---
section: IOConfig
servers:
  - OPCUAServer:
      url: opc.tcp://10.45.3.51:4842
      enabled: True
  - ModbusServer:
      url: 10.45.3.51
      blocksize: 100
      port: 502
      enabled: True
  - LidarServer:
      enabled: False
      sleep_time: 60.0
      record_time: 10.0
      path_to_save: ./VIQ_Platform/VIQ_Misc_Files/~Bunker_Examples/test.bin
      IP_brainbox: '192.168.1.5'
  - GRPCServer:
      enabled: False
      port: 50055
---
section: SequenceConfig
sequences:
{% set froth_number = 9 %}
{% set rock_number = 0 %} 
{% set bunker_number = 0 %}
{% for i in range(froth_number) %}
- id: {{ i }}
  name: FrothIQ_PintoValley_S1_Cam_{{ i+1 }}
  interval: 1
  module_sequence:
  # - module: cCamera.Camera
  #   name: Camera {{ i }}
  #   opc_prefix: ''
  #   ip_address: 192.168.39.{{ 71 + i }}
  #   url: rtsp://admin:HikQXNWKO@61.88.112.89:554/Streaming/Channels/101 #rtsp://root:PIQ2022@192.168.39.{{ 71 + i }}//axis-media/media.amp
  #   reconnect_interval: 60
  #   save_interval: 1
  #   im_width: 848
  #   im_height: 640
  #   simulation_path: ./VIQ_Platform/VIQ_Misc_Files/~Image_Examples/output_frames2
  #   simulate: True
  # - module: 'cCamSim_Module.read_image'
  #   simulation_path: ./VIQ_Platform/VIQ_Misc_Files/~Image_Examples/Froth_Set_Continious2
  # - module: 'cCam_Module.read_image'
  #   name: Camera {{ i }}
  #   opc_prefix: ''
  #   ip_address: 192.168.39.{{ 71 + i }}
  #   url: http://147.12.147.90:50000/nphMotionJpeg?Resolution=640x480&Quality=Standard
  #   reconnect_interval: 60
  #   save_interval: 1
  #   im_width: 848
  #   im_height: 640
  - module: 'cCamSim_Module.read_image'
    {% set sim_paths = [
      './VIQ_Platform/VIQ_Misc_Files/~Image_Examples/sim_bubbles',
      './VIQ_Platform/VIQ_Misc_Files/~Image_Examples/output_F_V1',
      './VIQ_Platform/VIQ_Misc_Files/~Image_Examples/output_F_V2'
    ] %}
    simulation_path: {{ sim_paths[i % 3] }}
    multi_image: 2
    multi_image_delay: 0.001
  - module: 'cBaseAlgorithms.Image_Resize'
    ref_im: { 'module': 'cv2.read_image','name': 'original_image','order': X }
    x_size: 640
    y_size: 640
  - module: 'cBaseAlgorithms.Crop_Region'
    ref_im: { 'module':'Image_Resize','name':'imresize','order': X}
    x_offset_1: 0
    x_offset_2: 0
    y_offset_1: 0
    y_offset_2: 0
  # - module: 'cMasking.generate_mask_from_maskingtool'
  #   ref_im: { 'module':'Image_Resize','name':'imresize','order':0} # maybe put X
  #   points_file_path: '.\VIQ_Platform\VIQ_Misc_Files\~Mask\pintovalley.txt'
  # - module: 'cFrothIQ2MicroserviceClient.async_send_image_FrothIQ_2_Microservice'
  #   ref_im: { 'module':'Image_Resize','name':'imresize','order': 0}
  #   camera_id: {{ i+1 }}
  #   model: 'Effnet_Froth'
  #   host: '192.168.20.157'
  #   port: 50052
  #   #endpoint: 'http://192.168.20.157:5001/segment' # url for microservice
  #   path: "192.168.20.182:50051" # url for webserver, microservice will directle send the image to interface
  #   #timeout: 1
  - module: 'cBaseAlgorithms.Image_Grey'
    ref_im: { 'module':'Crop_Region','name':'cropped_image','order':X} #{ 'module': 'generate_mask_from_maskingtool', 'name': 'Masked_Image', 'order': 0 } #
  - module: 'cFrothIQ.calculate_flow_multi'
    ref_im:  { 'module': 'Image_Grey','name': 'grey_image' ,'order': X }
    ref_datas: { 'module': 'cv2.read_image','name': 'original_image_timestamp','order': X }
  - module: 'cMasking.generate_mask_from_maskingtool'
    ref_im: { 'module':'calculate_flow_multi','name':'flow','order': 0}
    points_file_path: '.\VIQ_Platform\VIQ_Misc_Files\~Mask\fosterville.txt'
  - module: 'cFrothIQ.draw_flow'
    ref_im:  { 'module': 'Image_Grey','name': 'grey_image' ,'order': 0 }
    camera_theta: {{ 330 if i < 5 else 240 }}
    ref_flow: { 'module': 'generate_mask_from_maskingtool', 'name': 'Masked_Image', 'order': 0 }
  - module: 'cFrothIQ.create_vector_image_multi'
    ref_flow:  { 'module': 'generate_mask_from_maskingtool', 'name': 'Masked_Image', 'order': 0 }
    mm_per_pixel_ratio: 0.5
  - module: 'cFrothIQ.draw_histogram'
    ref_flow:  { 'module': 'generate_mask_from_maskingtool', 'name': 'Masked_Image', 'order': 0 }
  - module: 'cFrothIQ.update_graph'
    max_bubble_pop_rate: 20 #for scaling the graphs
    max_flow_speed: 200 #for scaling the graphs
  - module: 'cFrothIQ.draw_window_arrow'
    ref_im:  { 'module': 'Image_Grey','name': 'grey_image' ,'order': 0 }
    ref_flow: { 'module': 'generate_mask_from_maskingtool', 'name': 'Masked_Image', 'order': 0 }
    num_height: 3 # maybe dont need it,  i have hardcoded it for small  green red white arrows inside big window
    num_width: 3
    vector_cutoff: 0.1
  - module: 'cFrothIQ.Bubblepop'
    ref_im:  { 'module': 'Image_Grey','name': 'grey_image' ,'order': 0 }
    ref_flow: { 'module':'calculate_flow_multi','name':'flow','order': 0}
    min_area_threshold: 10
  - module: 'cFrothIQ.calculate_flow_speed' # dont need it at all i am not using it anymore
    frames_per_second: 2
    meters_per_pixel: 1
    average_frames: 5
    calculate_frames_internal: True
  - module: 'cFrothIQ.combine_images'
    ref_ims:
    - { 'module': 'draw_histogram','name': 'histogram','order': 0 } 
    - { 'module': 'draw_flow','name': 'flow_image','order': 0 }
    - { 'module': 'create_vector_image_multi','name': 'vector_image','order': 0 }
    - { 'module': 'update_graph','name': 'graph','order': 0 }
    ref_datas:
    - { 'module': 'calculate_flow_speed','name': 'speed','order': 0 }
    points_file_path: '.\VIQ_Platform\VIQ_Misc_Files\~Mask\fosterville.txt'
  - module: cAdvanced_BradlyticsPyTorch.Load_CNN
    model_checkpoint_path: './VIQ_Platform/VIQ_Misc_Files/~Models/BaseROI_Bubbles.pth.enc'
    backbone: 'resnet34'
  - module: cAdvanced_BradlyticsPyTorch.Get_Prediction_Async
    ref_im: { 'module': 'Image_Resize','name': 'imresize','order': 0 }
    ref_im_raw: { 'module': 'Image_Resize','name': 'imresize','order': 0 }
    shape: [640,640]
    fines: False
    loop_number: 10
    application: 'FrothIQ'
  - module: cAdvanced_BradlyticsPyTorch.Get_PSD
    ref_mask: { 'module': 'Get_Prediction','name': 'instances','order': 0 }
  - module: 'cAdvanced_PSD.init_Calculate_PSD'
    curves:
      ROSIN:
        active: true
        fixed_least_squares: false
        power: 1.0
        p63_guess: 70.0
        fines_offset: 0.0 # fines offset must be between 0-1
        opc_active: true
        color: (255,255,255)
      SCHUMANN:
        active: false
        fixed_least_squares: false
        power: 0.1
        p100_guess: 160
        fines_offset: 0.0
        opc_active: false
        color: (255, 255 ,0)
      GAUDIN:
        active: false
        fixed_least_squares: true
        power: 1.3
        p100_guess: 160
        fines_offset: 0.16
        opc_active: false
        color: (255, 0 , 255)
      LOGNORM:
        active: false
        fixed_least_squares: false
        stddev: 0.8
        p50_guess: 100
        fines_offset: 0.0499
        opc_active: false
        color: (0,255, 255)
      LOGISTIC:
        active: false
        fixed_least_squares: true
        p50_guess: 50
        power: 2.5
        fines_offset: 0.04999
        opc_active: false
        color: (0, 0, 255)
      MULTIMODAL_CSPLINE:
        active: false
        extrapolate: false
        opc_active: false
        color: (255,255,255) 
  - module: 'cAdvanced_PSD.Calculate_PSD'
    ref_data: { 'module': 'Get_PSD','name': 'PSD_Data','order':0}
    sieve_bins: [0,3,5.6,8,11.2,16,22.4,31.5,44,63,75,90,119,154,219,250,375,400,450]
    bin_sieve_sizes: [0.075, 0.106, 0.150, 0.212, 0.300, 0.425, 0.600, 0.850, 1.180, 2.3, 4, 5.6, 8, 11.2, 16, 22.4, 31.5, 44, 63, 75, 90, 119, 154, 219, 250, 300]
    top_size: 400
    n_fines_removed: 0
    sieve_size_active: true
    data_used_for_psd: 0
  - module: 'cAdvanced_PSD.FrothIQ_Output'
    ref_datas:
      - { 'module': 'combined_images','name': 'speed','order': 0 }
      - { 'module': 'combined_images','name': 'pop_rate','order': 0 }
      - { 'module': 'combined_images','name': 'average_speed','order': 0 }
      - { 'module': 'combined_images','name': 'angle_of_ave_speed','order': 0 }
    ref_data_x: { 'module': 'Calculate_PSD','name': 'Percent_x_mm','order': 0 }
    ref_data_y: { 'module': 'Calculate_PSD','name': 'Percent_y_mm','order': 0 }
    ref_df: { 'module': 'Calculate_PSD','name': 'dataframe','order': 0 }
    ref_sieve_sizes: { 'module': 'Calculate_PSD','name': 'seive_sizes','order': 0 }
    ref_percentages: { 'module': 'Calculate_PSD','name': 'percentages','order': 0 }
    packet: 'RockIQ'
    camera_id: {{ i+1 }}
    outputs: 
      output_template: cAdvanced_PSD.Froth_Output_Template
  # - module: 'cAdvanced_PSD.FrothIQ_Output'
  #   ref_datas:
  #     - { 'module': 'combined_images','name': 'speed','order': 0 }
  #     - { 'module': 'combined_images','name': 'pop_rate','order': 0 }
  #     - { 'module': 'combined_images','name': 'average_speed','order': 0 }
  #     - { 'module': 'combined_images','name': 'angle_of_ave_speed','order': 0 }
  #   ref_data_x: { 'module': 'Calculate_PSD','name': 'Percent_x_mm','order': 0 }
  #   ref_data_y: { 'module': 'Calculate_PSD','name': 'Percent_y_mm','order': 0 }
  #   ref_df: { 'module': 'Calculate_PSD','name': 'dataframe','order': 0 }
  #   ref_sieve_sizes: { 'module': 'Calculate_PSD','name': 'seive_sizes','order': 0 }
  #   ref_percentages: { 'module': 'Calculate_PSD','name': 'percentages','order': 0 }
  #   packet: 'RockIQ'
  #   camera_id: {{ i+1 }}
  #   outputs: 
  #     output_template: cAdvanced_PSD.Froth_Output_Template
  # - module: 'cFrothIQ_Output.All_Output'
  #   ref_datas:
  #     - { 'module': 'combined_images','name': 'speed','order': 0 }
  #     - { 'module': 'combined_images','name': 'pop_rate','order': 0 }
  #     - { 'module': 'combined_images','name': 'average_speed','order': 0 }
  #     - { 'module': 'combined_images','name': 'angle_of_ave_speed','order': 0 }
  #   ref_im_raw: { 'module': 'cv2.read_image','name': 'original_image','order': 0 }
  #   ref_im_del: { 'module':'Generate_Masks','name':'Final_Contour_Im','order': 0}
  #   ref_data_x: { 'module': 'Calculate_PSD','name': 'Percent_x_mm','order': 0 }
  #   ref_data_y: { 'module': 'Calculate_PSD','name': 'Percent_y_mm','order': 0 }
  #   ref_df: { 'module': 'Calculate_PSD','name': 'dataframe','order': 0 }
  #   ref_sieve_sizes: { 'module': 'Calculate_PSD','name': 'seive_sizes','order': 0 }
  #   ref_percentages: { 'module': 'Calculate_PSD','name': 'percentages','order': 0 }
  #   packet: 'RockIQ'
  #   camera_id: {{ i+1 }}
  #   outputs: 
  #     output_template: 'cFrothIQ_Output.Froth_Output'
  # - module: 'cFrothIQ_Output.All_Output'
  #   ref_datas:
  #     - { 'module': 'combined_images','name': 'speed','order': 0 }
  #     - { 'module': 'combined_images','name': 'pop_rate','order': 0 }
  #     - { 'module': 'combined_images','name': 'average_speed','order': 0 }
  #     - { 'module': 'combined_images','name': 'angle_of_ave_speed','order': 0 }
  #   ref_im_raw: { 'module': 'cv2.read_image', 'name': 'original_image', 'order': 0 }
  #   ref_im_del: { 'module': 'Generate_Masks', 'name': 'Final_Contour_Im', 'order': 0 }
  #   ref_data_x: { 'module': 'Calculate_PSD', 'name': 'Percent_x_mm', 'order': 0 }
  #   ref_data_y: { 'module': 'Calculate_PSD', 'name': 'Percent_y_mm', 'order': 0 }
  #   ref_df: { 'module': 'Calculate_PSD', 'name': 'dataframe', 'order': 0 }
  #   ref_sieve_sizes: { 'module': 'Calculate_PSD', 'name': 'seive_sizes', 'order': 0 }
  #   ref_percentages: { 'module': 'Calculate_PSD', 'name': 'percentages', 'order': 0 }
  #   packet: 'FrothIQ'
  #   camera_id: {{ i+1 }}
  #   outputs: 
  #     output_template: 'cFrothIQ_Output.Froth_Output'
  # - module: 'cFrothIQ_Output.fetch_data_from_microservice' #fetch_data_from_microservice'
  #   ref_datas:
  #   - { 'module': 'combined_images','name': 'speed','order': 0 }
  #   - { 'module': 'combined_images','name': 'pop_rate','order': 0 }
  #   - { 'module': 'combined_images','name': 'average_speed','order': 0 }
  #   - { 'module': 'combined_images','name': 'angle_of_ave_speed','order': 0 }
  #   camera_id: {{ i+1 }}
  #   URL: http://192.168.20.157:5001 # please DONT put a "/" at the end ---- neccesary # url of microservice where to fetch the data from
  # - module: 'cFrothIQ_Output.Froth_Output'
  #   ref_data: { 'module':'fetch_data_from_microservice','name':'Save_data','order':0}
  #   camera_id: {{ i+1 }}
  #   outputs: 
  #     output_template: cFrothIQ_Output.Froth_Output_Template
  # - module: 'cSave_FrothIQ_Data.Save_Data_FrothIQ'
  #   ref_im: { 'module':'Crop_Region','name':'cropped_image','order':0}
  #   ref_data: { 'module':'fetch_data_from_microservice','name':'Save_data','order':0}
  #   site: 'test_site'
  #   picformat: "jpg"
  #   saving_on: True
  #   module_init:
  #     path: '.\VIQ_Platform\VIQ_Misc_Files\~Data\Froth Camera {{i+1}}'
  #     rotation: 'weekly'
  #     max_age_months: 6
  #     checking_freq_days: 3
  #     max_images_per_hour: 50
  #     max_folder_size_gb: 1
  # - module: 'cAdvanced_Http_Client.Send_Data_FrothIQ'
  #   ref_im: 
  #   - { 'module': 'combine_images','name': 'combined_image','order': 0 }
  #   - { 'module': 'draw_flow','name': 'flow_image','order': 0 }
  #   - { 'module': 'create_vector_image_white','name': 'vector_image_white','order': 0 }
  #   - { 'module': 'draw_histogram','name': 'histogram','order': 0 }
  #   - { 'module': 'update_graph','name': 'graph','order': 0 }
  #   - { 'module': 'draw_window_arrow','name': 'window_arrow','order': 0 }
  #   - { 'module': 'Bubblepop','name': 'Bubblepop','order': 0 }
  #   ref_datas: 
  #   - { 'module': 'draw_histogram','name': 'histogram_values','order': 0 }
  #   - { 'module': 'combined_images','name': 'speedall','order': 0 }
  #   - { 'module': 'combined_images','name': 'pop_rateall','order': 0 }
  #   - { 'module': 'combined_images','name': 'timeseries','order': 0 }
  #   camera_id: {{ i+1 }}
  #   endpoint: "localhost:50051"
  #   servers:
  #   - url: http://127.0.0.1:5000/send-data
  #     verify: false
  #   packet: 'FrothIQ'
  #   timeout: 0.05
  #   send_interval: 0
  - module: 'cAdvanced_SpeedySocket_FrothIQ2.start_server_thread'
    server:
      host: '10.45.3.51'
      port: {{9000+i}}
  - module: 'cAdvanced_SpeedySocket_FrothIQ2.send_data_frothIQ'
    ref_im: 
    - { 'module': 'combine_images','name': 'combined_image','order': 0 }
    - { 'module': 'draw_flow','name': 'flow_image','order': 0 }
    - { 'module': 'create_vector_image_multi','name': 'vector_image_white','order': 0 }
    - { 'module': 'update_graph','name': 'graph','order': 0 }
    - { 'module': 'draw_window_arrow','name': 'window_arrow','order': 0 }
    - { 'module': 'Bubblepop','name': 'Bubblepop','order': 0 }
    ref_datas: 
    - { 'module': 'draw_histogram','name': 'histogram_values','order': 0 }
    - { 'module': 'combined_images','name': 'speedall','order': 0 }
    - { 'module': 'combined_images','name': 'pop_rateall','order': 0 }
    - { 'module': 'combined_images','name': 'timeseries','order': 0 }
    camera_id: {{ i+1 }}
    packet: 'FrothIQ'
  - module: 'cAdvanced_SpeedySocket_FrothIQ2.send_frothIQ_segmentation'
    ref_seg: { 'module': 'Get_Prediction','name': 'raw_mask','order': 0 }
    ref_im: { 'module': 'Get_Prediction','name': 'raw_im','order': 0 }
    ref_data_x: { 'module': 'Calculate_PSD','name': 'Percent_x_mm','order': 0 }
    ref_data_y: { 'module': 'Calculate_PSD','name': 'Percent_y_mm','order': 0 }
    ref_df: { 'module': 'Calculate_PSD','name': 'dataframe','order': 0 }
    ref_sieve_sizes: { 'module': 'Calculate_PSD','name': 'seive_sizes','order': 0 }
    ref_percentages: { 'module': 'Calculate_PSD','name': 'percentages','order': 0 }
    camera_id: {{ i+1 }}
  # - module: cDirectImageSocekt.Send_Raw_Image_FrothIQ
  #   ref_im: { 'module': 'combine_images','name': 'combined_image','order': 0 }
  #   camera_id: {{ i+1 }}
  #   servers:
  #   - url: http://192.168.20.209:5000
  #     verify: false
{% endfor %}
